//
// Copyright 2023 Andrei Makeev
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// *** THIS PACKAGE HAS SPECIAL LICENSING CONDITIONS.  PLEASE
//     CONSULT THE OWNERS AND opensource-licensing@google.com BEFORE
//     DEPENDING ON IT IN YOUR PROJECT. ***
package {
    default_applicable_licenses: ["external_utilslinux_license"],
}

// See: http://go/android-license-faq
license {
    name: "external_utilslinux_license",
    visibility: [":__subpackages__"],
    license_kinds: [
        "SPDX-license-identifier-GPL-2.0",
    ],
    license_text: [
        "COPYING",
        "README.licensing",
    ],
}

cc_defaults {
    name: "utilslinux_defaults",
    local_include_dirs: ["include"],
    cflags: [
        "-DHAVE_NANOSLEEP",
        "-D_GNU_SOURCE",
        "-DHAVE_ERR_H",
        "-DHAVE_STRNDUP",
        "-DHAVE_FSYNC",
        "-DHAVE_SYSCONF",
        "-DHAVE_OPENAT",
        "-DHAVE_SYS_FILE_H",
        "-DHAVE_SYS_TTYDEFAULTS_H",
        "-DHAVE_SYS_SYSMACROS_H",
        "-DPACKAGE_STRING=\"util-linux 2.38\"",
        "-Wno-error=unused-parameter",
        "-Wno-error=missing-field-initializers",
        "-Wno-error=unused-variable",
    ],
}

cc_library_static {
    name: "utilslinux_libcommon",
    defaults: ["utilslinux_defaults"],
    host_supported: true,
    local_include_dirs: ["lib"],
    export_include_dirs: ["lib"],
    srcs: [
        "lib/blkdev.c",
        "lib/buffer.c",
        "lib/canonicalize.c",
        "lib/color-names.c",
        "lib/crc32.c",
        "lib/crc32c.c",
        "lib/crc64.c",
        "lib/c_strtod.c",
        "lib/encode.c",
        "lib/env.c",
        "lib/fileutils.c",
        "lib/idcache.c",
        "lib/jsonwrt.c",
        "lib/mangle.c",
        "lib/match.c",
        "lib/mbsalign.c",
        "lib/mbsedit.c",
        "lib/md5.c",
        "lib/pager.c",
        "lib/pwdutils.c",
        "lib/randutils.c",
        "lib/sha1.c",
        "lib/sha256.c",
        "lib/signames.c",
        "lib/strutils.c",
        "lib/strv.c",
        "lib/timeutils.c",
        "lib/ttyutils.c",
        "lib/xxhash.c",
        "lib/linux_version.c",
        "lib/loopdev.c",
        "lib/path.c",
        "lib/sysfs.c",
        "lib/procfs.c",
    ]
}

cc_library_static {
    name: "utilslinux_libtcolors",
    defaults: ["utilslinux_defaults"],
    host_supported: true,
    local_include_dirs: ["lib"],
    export_include_dirs: ["lib"],
    srcs: [
        "lib/colors.c",
        "lib/color-names.c",
    ],
}

// Normally generated by autoconf (see configure.ac), values come from there
genrule {
    name: "utilslinux_libsmartcols.h",
    srcs: ["libsmartcols/src/libsmartcols.h.in"],
    out: ["libsmartcols.h"],
    cmd: "sed -e 's/@LIBSMARTCOLS_VERSION@/2.38/g' $(in) > $(out)",
}

cc_library_static {
    name: "utilslinux_libsmartcols",
    defaults: ["utilslinux_defaults"],
    host_supported: true,
    local_include_dirs: ["libsmartcols/src"],
    export_include_dirs: ["libsmartcols/src"],
    generated_headers: ["utilslinux_libsmartcols.h"],
    export_generated_headers: ["utilslinux_libsmartcols.h"],
    srcs: [
        "libsmartcols/src/iter.c",
        "libsmartcols/src/symbols.c",
        "libsmartcols/src/cell.c",
        "libsmartcols/src/column.c",
        "libsmartcols/src/line.c",
        "libsmartcols/src/table.c",
        "libsmartcols/src/print.c",
        "libsmartcols/src/print-api.c",
        "libsmartcols/src/version.c",
        "libsmartcols/src/calculate.c",
        "libsmartcols/src/grouping.c",
        "libsmartcols/src/walk.c",
        "libsmartcols/src/init.c",
    ],
    static_libs: ["utilslinux_libcommon"],
}

// Normally generated by autoconf (see configure.ac), values come from there
genrule {
    name: "utilslinux_libfdisk.h",
    srcs: ["libfdisk/src/libfdisk.h.in"],
    out: ["libfdisk.h"],
    cmd: "sed -e 's/@LIBFDISK_VERSION@/2.38/g' $(in) > $(out)",
}

cc_library_static {
    name: "utilslinux_libfdisk",
    defaults: ["utilslinux_defaults"],
    host_supported: true,
    local_include_dirs: ["libfdisk/src"],
    export_include_dirs: ["libfdisk/src"],
    generated_headers: ["utilslinux_libfdisk.h"],
    export_generated_headers: ["utilslinux_libfdisk.h"],
    srcs: [
        "libfdisk/src/init.c",
        "libfdisk/src/field.c",
        "libfdisk/src/item.c",
        "libfdisk/src/test.c",
        "libfdisk/src/ask.c",
        "libfdisk/src/alignment.c",
        "libfdisk/src/label.c",
        "libfdisk/src/utils.c",
        "libfdisk/src/context.c",
        "libfdisk/src/parttype.c",
        "libfdisk/src/partition.c",
        "libfdisk/src/table.c",
        "libfdisk/src/iter.c",
        "libfdisk/src/script.c",
        "libfdisk/src/version.c",
        "libfdisk/src/wipe.c",
        "libfdisk/src/sun.c",
        "libfdisk/src/sgi.c",
        "libfdisk/src/dos.c",
        "libfdisk/src/bsd.c",
        "libfdisk/src/gpt.c",
    ],
    static_libs: ["utilslinux_libcommon", "utilslinux_libuuid"],
}

cc_library_static {
    name: "utilslinux_libuuid",
    defaults: ["utilslinux_defaults"],
    host_supported: true,
    local_include_dirs: ["libuuid/src"],
    export_include_dirs: ["libuuid/src"],
    srcs: [
        "libuuid/src/clear.c",
        "libuuid/src/compare.c",
        "libuuid/src/copy.c",
        "libuuid/src/gen_uuid.c",
        "libuuid/src/isnull.c",
        "libuuid/src/pack.c",
        "libuuid/src/parse.c",
        "libuuid/src/unpack.c",
        "libuuid/src/unparse.c",
        "libuuid/src/uuid_time.c",
        "libuuid/src/predefined.c",
        "lib/randutils.c",
        "lib/md5.c",
        "lib/sha1.c",
    ],
}

cc_binary {
    host_supported: true,
    name: "sfdisk",
    defaults: ["utilslinux_defaults"],
    local_include_dirs: ["disk-utils"],
    srcs: [
	    "disk-utils/sfdisk.c",
	    "disk-utils/fdisk-list.c",
    ],
    static_libs: [
        "utilslinux_libcommon",
        "utilslinux_libfdisk",
        "utilslinux_libsmartcols",
        "utilslinux_libtcolors",
        "utilslinux_libuuid",
    ],
}

cc_binary_host {
    name: "fallocate",
    defaults: ["utilslinux_defaults"],
    local_include_dirs: ["sys-utils"],
    srcs: [
	    "sys-utils/fallocate.c",
    ],
    static_libs: [
        "utilslinux_libcommon",
    ],
}
